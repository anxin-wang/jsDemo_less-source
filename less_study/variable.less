//变量

//Demo1
@nice-blue: #5B83AD;
@light-blue: @nice-blue + #111;

#header {
  color: @light-blue;
}


//Demo2
// Variables
@link-color:        #428bca; // sea blue
@link-color-hover:  darken(@link-color, 10%);

// Usage
a,
.link {
  color: @link-color;
}
a:hover {
  color: @link-color-hover;
}
.widget {
  color: #fff;
  background: @link-color;
}



//Demo3
// Variables
@mySelector: banner;

// Usage
.@{mySelector} {
  font-weight: bold;
  line-height: 40px;
  margin: 0 auto;
}


//Demo4
// Variables
@images: "../img";

// Usage
body {
  color: #444;
  background: url("@{images}/white-sand.png");
}


//Demo5
// Variables
@themes: "../../src/themes";

// Usage
@import "@{themes}/tidal-wave.less";


//Demo6
@property: color;

.widget {
  @{property}: #0ee;
  background-@{property}: #999;
}


//变量都是延迟加载的
.lazy-eval {
  width: @var;
}

@var: @a;
@a: 9%;


相当于
.lazy-eval-scope {
  width: @var;
  @a: 9%;
}

@var: @a;
@a: 100%;//这个不起作用，因为作用域是@a:9%优先


编译出来
.lazy-eval-scope {
  width: 9%;
}


//变量要注意作用域和最后一个定义的
@var: 0;
.class {
  @var: 1;
  .brass {
    @var: 2;
    three: @var;
    @var: 3;
  }
  one: @var;
}
编译成:
.class {
  one: 1;
}
.class .brass {
  three: 3;
}


//默认变量
// library
@base-color: green;
@dark-color: darken(@base-color, 10%);

// use of library
@import "library.less";
@base-color: red;


